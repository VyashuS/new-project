{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/LAPTOPS24/red-playground/src/app/page.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { MessageCircle, Calendar, User, Send } from 'lucide-react';\r\n\r\n// Types\r\ninterface User {\r\n  id: number;\r\n  name: string;\r\n  email: string;\r\n  company: {\r\n    name: string;\r\n  };\r\n}\r\n\r\ninterface Comment {\r\n  id: number;\r\n  postId: number;\r\n  name: string;\r\n  email: string;\r\n  body: string;\r\n  timestamp?: string;\r\n}\r\n\r\ninterface CommentWithUser extends Comment {\r\n  user?: User;\r\n}\r\n\r\n// Mock data\r\nconst mockUsers: User[] = [\r\n  {\r\n    id: 1,\r\n    name: \"John Doe\",\r\n    email: \"john.doe@techcorp.com\",\r\n    company: { name: \"TechCorp Solutions\" }\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Sarah Johnson\", \r\n    email: \"sarah.johnson@innovate.io\",\r\n    company: { name: \"Innovate Technologies\" }\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Mike Chen\",\r\n    email: \"mike.chen@webdev.co\", \r\n    company: { name: \"WebDev Co.\" }\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Emma Wilson\",\r\n    email: \"emma.wilson@startup.xyz\",\r\n    company: { name: \"StartupXYZ\" }\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"David Rodriguez\",\r\n    email: \"david.rodriguez@agency.net\",\r\n    company: { name: \"Creative Agency\" }\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"Lisa Park\",\r\n    email: \"lisa.park@design.studio\",\r\n    company: { name: \"Design Studio Pro\" }\r\n  },\r\n  {\r\n    id: 7,\r\n    name: \"Alex Thompson\",\r\n    email: \"alex.thompson@code.works\",\r\n    company: { name: \"CodeWorks Inc.\" }\r\n  },\r\n  {\r\n    id: 8,\r\n    name: \"Maria Garcia\",\r\n    email: \"maria.garcia@digital.hub\",\r\n    company: { name: \"Digital Hub Solutions\" }\r\n  }\r\n];\r\n\r\nconst mockComments: Comment[] = [\r\n  {\r\n    id: 1,\r\n    postId: 1,\r\n    name: \"John Doe\",\r\n    email: \"john.doe@techcorp.com\",\r\n    body: \"This is a really insightful post! I've been working with similar technologies and found this approach quite effective. The examples you provided are clear and well-documented.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    postId: 1,\r\n    name: \"Sarah Johnson\",\r\n    email: \"sarah.johnson@innovate.io\",\r\n    body: \"Great explanation! I had some questions about the implementation details, but your code samples cleared everything up. Looking forward to trying this out in my project.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    postId: 1,\r\n    name: \"Mike Chen\",\r\n    email: \"mike.chen@webdev.co\",\r\n    body: \"Thanks for sharing this! The performance improvements you mentioned are exactly what we needed for our application. The before/after benchmarks really help demonstrate the impact.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    postId: 1,\r\n    name: \"Emma Wilson\",\r\n    email: \"emma.wilson@startup.xyz\",\r\n    body: \"Excellent tutorial! I appreciate how you broke down complex concepts into digestible steps. The troubleshooting section at the end is particularly valuable.\"\r\n  },\r\n  {\r\n    id: 5,\r\n    postId: 1,\r\n    name: \"David Rodriguez\",\r\n    email: \"david.rodriguez@agency.net\",\r\n    body: \"This approach saved us hours of development time. The integration was smoother than expected, and the documentation quality is outstanding. Highly recommended!\"\r\n  }\r\n];\r\n\r\n// Helper function to get user initials\r\nconst getInitials = (name: string): string => {\r\n  return name.split(' ').map(n => n[0]).join('').toUpperCase();\r\n};\r\n\r\n// Helper function to get user by email\r\nconst getUserByEmail = (email: string): User | undefined => {\r\n  return mockUsers.find(user => user.email === email);\r\n};\r\n\r\n// Comment Item Component\r\nconst CommentItem: React.FC<{ comment: CommentWithUser }> = ({ comment }) => {\r\n  const user = getUserByEmail(comment.email);\r\n  const initials = getInitials(comment.name);\r\n  \r\n  return (\r\n    <div className=\"bg-white rounded-lg p-6 mb-4 shadow-sm border border-gray-100\">\r\n      <div className=\"flex items-start space-x-4\">\r\n        <div className=\"flex-shrink-0\">\r\n          <div className=\"w-12 h-12 bg-gray-800 rounded-full flex items-center justify-center text-white font-medium text-sm\">\r\n            {initials}\r\n          </div>\r\n        </div>\r\n        <div className=\"flex-1 min-w-0\">\r\n          <div className=\"flex items-center justify-between mb-2\">\r\n            <div>\r\n              <h3 className=\"text-lg font-semibold text-gray-900\">{comment.name}</h3>\r\n              <p className=\"text-sm text-gray-600\">{comment.email}</p>\r\n            </div>\r\n            <div className=\"text-right\">\r\n              <div className=\"text-sm font-medium text-gray-900\">\r\n                {user?.company.name || 'Unknown Company'}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <p className=\"text-gray-700 leading-relaxed\">{comment.body}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// User Dropdown Component\r\nconst UserDropdown: React.FC<{\r\n  selectedUser: User | null;\r\n  onUserSelect: (user: User) => void;\r\n}> = ({ selectedUser, onUserSelect }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  return (\r\n    <div className=\"relative\">\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => setIsOpen(!isOpen)}\r\n        className=\"w-full flex items-center justify-between px-4 py-3 text-left bg-white border border-gray-300 rounded-lg shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n      >\r\n        <div className=\"flex items-center space-x-3\">\r\n          {selectedUser && (\r\n            <div className=\"w-8 h-8 bg-gray-800 rounded-full flex items-center justify-center text-white font-medium text-xs\">\r\n              {getInitials(selectedUser.name)}\r\n            </div>\r\n          )}\r\n          <div>\r\n            <div className=\"text-sm font-medium text-gray-900\">\r\n              {selectedUser ? selectedUser.name : 'Select User'}\r\n            </div>\r\n            {selectedUser && (\r\n              <div className=\"text-xs text-gray-500\">\r\n                ({selectedUser.company.name})\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <svg className=\"w-5 h-5 text-gray-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n          <path fillRule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\r\n        </svg>\r\n      </button>\r\n      \r\n      {isOpen && (\r\n        <div className=\"absolute z-10 w-full mt-1 bg-white border border-gray-300 rounded-lg shadow-lg max-h-60 overflow-auto\">\r\n          {mockUsers.map((user) => (\r\n            <button\r\n              key={user.id}\r\n              type=\"button\"\r\n              onClick={() => {\r\n                onUserSelect(user);\r\n                setIsOpen(false);\r\n              }}\r\n              className=\"w-full flex items-center space-x-3 px-4 py-3 text-left hover:bg-gray-50 focus:outline-none focus:bg-gray-50\"\r\n            >\r\n              <div className=\"w-8 h-8 bg-gray-800 rounded-full flex items-center justify-center text-white font-medium text-xs\">\r\n                {getInitials(user.name)}\r\n              </div>\r\n              <div>\r\n                <div className=\"text-sm font-medium text-gray-900\">{user.name}</div>\r\n                <div className=\"text-xs text-gray-500\">({user.company.name})</div>\r\n              </div>\r\n            </button>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Add Comment Form Component\r\nconst AddCommentForm: React.FC<{\r\n  onAddComment: (comment: Omit<Comment, 'id' | 'postId'>) => void;\r\n}> = ({ onAddComment }) => {\r\n  const [selectedUser, setSelectedUser] = useState<User | null>(mockUsers[1]); // Default to Sarah Johnson\r\n  const [commentText, setCommentText] = useState('');\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!selectedUser || !commentText.trim()) return;\r\n\r\n    onAddComment({\r\n      name: selectedUser.name,\r\n      email: selectedUser.email,\r\n      body: commentText.trim()\r\n    });\r\n\r\n    setCommentText('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-lg p-6 mb-8 shadow-sm border border-gray-100\">\r\n      <div className=\"flex items-center space-x-2 mb-6\">\r\n        <MessageCircle className=\"w-5 h-5 text-blue-600\" />\r\n        <h2 className=\"text-xl font-semibold text-gray-900\">Add a Comment</h2>\r\n      </div>\r\n\r\n      <div className=\"space-y-4\">\r\n        <div>\r\n          <label htmlFor=\"user-select\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n            Select User\r\n          </label>\r\n          <UserDropdown\r\n            selectedUser={selectedUser}\r\n            onUserSelect={setSelectedUser}\r\n          />\r\n          {selectedUser && (\r\n            <p className=\"mt-2 text-sm text-gray-600\">\r\n              Commenting as {selectedUser.name} from {selectedUser.company.name}\r\n            </p>\r\n          )}\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor=\"comment\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n            Your Comment\r\n          </label>\r\n          <textarea\r\n            id=\"comment\"\r\n            rows={4}\r\n            value={commentText}\r\n            onChange={(e) => setCommentText(e.target.value)}\r\n            className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 resize-none\"\r\n            placeholder=\"Write your comment here...\"\r\n          />\r\n        </div>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          disabled={!selectedUser || !commentText.trim()}\r\n          className=\"inline-flex items-center space-x-2 px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\r\n        >\r\n          <Send className=\"w-4 h-4\" />\r\n          <span>Post Comment</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Sorting Controls Component\r\nconst SortingControls: React.FC<{\r\n  sortOrder: 'newest' | 'oldest';\r\n  onSortChange: (order: 'newest' | 'oldest') => void;\r\n}> = ({ sortOrder, onSortChange }) => {\r\n  return (\r\n    <div className=\"flex items-center space-x-2 mb-6\">\r\n      <button\r\n        onClick={() => onSortChange('newest')}\r\n        className={`inline-flex items-center space-x-2 px-4 py-2 rounded-lg text-sm font-medium transition-colors ${\r\n          sortOrder === 'newest'\r\n            ? 'bg-blue-600 text-white'\r\n            : 'bg-white text-gray-700 border border-gray-300 hover:bg-gray-50'\r\n        }`}\r\n      >\r\n        <Calendar className=\"w-4 h-4\" />\r\n        <span>Newest</span>\r\n      </button>\r\n      <button\r\n        onClick={() => onSortChange('oldest')}\r\n        className={`inline-flex items-center space-x-2 px-4 py-2 rounded-lg text-sm font-medium transition-colors ${\r\n          sortOrder === 'oldest'\r\n            ? 'bg-gray-800 text-white'\r\n            : 'bg-white text-gray-700 border border-gray-300 hover:bg-gray-50'\r\n        }`}\r\n      >\r\n        <Calendar className=\"w-4 h-4\" />\r\n        <span>Oldest</span>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Main Comment System Component\r\nconst CommentSystem: React.FC = () => {\r\n  const [comments, setComments] = useState<Comment[]>([]);\r\n  const [sortOrder, setSortOrder] = useState<'newest' | 'oldest'>('newest');\r\n\r\n  useEffect(() => {\r\n    // Add timestamps to mock comments and sort by newest first\r\n    const commentsWithTimestamps = mockComments.map((comment, index) => ({\r\n      ...comment,\r\n      timestamp: new Date(Date.now() - index * 60000).toISOString() // Each comment 1 minute apart\r\n    }));\r\n    setComments(commentsWithTimestamps);\r\n  }, []);\r\n\r\n  const handleAddComment = (newCommentData: Omit<Comment, 'id' | 'postId'>) => {\r\n    const newComment: Comment = {\r\n      ...newCommentData,\r\n      id: Math.max(...comments.map(c => c.id)) + 1,\r\n      postId: 1,\r\n      timestamp: new Date().toISOString()\r\n    };\r\n    setComments([newComment, ...comments]);\r\n  };\r\n\r\n  const sortedComments = [...comments].sort((a, b) => {\r\n    const timeA = new Date(a.timestamp || 0).getTime();\r\n    const timeB = new Date(b.timestamp || 0).getTime();\r\n    return sortOrder === 'newest' ? timeB - timeA : timeA - timeB;\r\n  });\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      <div className=\"max-w-4xl mx-auto px-4 py-8\">\r\n        {/* Header */}\r\n        <div className=\"text-center mb-12\">\r\n          <h1 className=\"text-4xl font-bold text-gray-900 mb-4\">Comment System</h1>\r\n          <p className=\"text-lg text-gray-600 max-w-2xl mx-auto\">\r\n            Share your thoughts and engage with the community. Join the conversation below!\r\n          </p>\r\n        </div>\r\n\r\n        {/* Add Comment Form */}\r\n        <AddCommentForm onAddComment={handleAddComment} />\r\n\r\n        {/* Comments Section */}\r\n        <div className=\"bg-white rounded-lg p-6 shadow-sm border border-gray-100\">\r\n          <div className=\"flex items-center justify-between mb-6\">\r\n            <h2 className=\"text-2xl font-semibold text-gray-900\">\r\n              Comments ({comments.length})\r\n            </h2>\r\n            <SortingControls\r\n              sortOrder={sortOrder}\r\n              onSortChange={setSortOrder}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"space-y-4\">\r\n            {sortedComments.length > 0 ? (\r\n              sortedComments.map((comment) => (\r\n                <CommentItem key={comment.id} comment={comment} />\r\n              ))\r\n            ) : (\r\n              <div className=\"text-center py-12\">\r\n                <MessageCircle className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\r\n                <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No comments yet</h3>\r\n                <p className=\"text-gray-600\">Be the first to share your thoughts!</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentSystem;"],"names":[],"mappings":"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","debugId":null}}]
}